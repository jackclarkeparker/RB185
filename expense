#! /usr/bin/env ruby

require 'pg'

def display_help
  puts <<~HELP
    An expense recording system

    Commands:

    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
  HELP
end

def list_expenses
  db = PG.connect(dbname: "expenses")
  result = db.exec('TABLE expenses ORDER BY created_on;')

  result.each do |tuple|
    columns = [ tuple['id'].rjust(2),
                tuple['created_on'],
                tuple['amount'].rjust(12),
                tuple['memo'] ]

    puts columns.join(' | ')
  end
end

def add_expense_conditional
  case ARGV.size
  when (4..) then add_expense(ARGV[1], "'#{ARGV[2]}'", "'#{ARGV[3]}'")
  when 3     then add_expense(ARGV[1], "'#{ARGV[2]}'")
  else            puts "You must provide an amount and memo."
  end
end

def add_expense(amount, memo, created_on = "NOW()")
  db = PG.connect(dbname: "expenses")
  insert = "INSERT INTO expenses (amount, memo, created_on) "\
           "VALUES (#{amount}, #{memo}, #{created_on})"
  db.exec(insert)
end

command = ARGV.first
case command
when 'list'
  list_expenses
when 'add'
  add_expense_conditional
else
  display_help
end

