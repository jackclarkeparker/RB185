#! /usr/bin/env ruby

require 'pg'

class CLI
  def initialize
    @expense_data = ExpenseData.new
  end

  def run(args)
    command = args.first

    if command == 'list'
      @expense_data.list_expenses
    elsif command == 'add'
      abort "You must provide an amount and memo." if args.size < 3
      @expense_data.add_expense(*args[1..-1])
    else
      @expense_data.display_help
    end
  end
end

class ExpenseData
  def initialize
    @connection = PG::Connection.new(dbname: "expenses")
  end

  def display_help
    puts <<~HELP
      An expense recording system

      Commands:

      add AMOUNT MEMO [DATE] - record a new expense
      clear - delete all expenses
      list - list all expenses
      delete NUMBER - remove expense with id NUMBER
      search QUERY - list expenses with a matching memo field
    HELP
  end

  def list_expenses
    result = @connection.exec('TABLE expenses ORDER BY created_on;')

    result.each do |tuple|
      columns = [ tuple['id'].rjust(2),
                  tuple['created_on'],
                  tuple['amount'].rjust(12),
                  tuple['memo'] ]

      puts columns.join(' | ')
    end
  end

  def add_expense(amount, memo, created_on = Date.today)
    sql = "INSERT INTO expenses (amount, memo, created_on) VALUES ($1, $2, $3)"
    @connection.exec_params(sql, [amount, memo, created_on])
  end
end

cli = CLI.new
cli.run(ARGV)

